{
  "_comment": ["This is intentionally undocumented in README.md, do not use it.",
               "Using it is an automatic CI error.",
               "broken_linux, broken_windows and broken_macos are lists of wraps that are known",
               "to be broken on the CI and ***MUST*** get repaired before updates",
               "will be accepted. If upstream does not support an Operating System,",
               "explicitly disable that Operating System in build_on.",
               "Please remove projects from those lists once they are updated."],
  "broken_linux": [
    "arduinocore-avr", "cpr", "glew", "imgui-sfml",
    "openal-soft", "openh264",
    "protobuf-c", "quazip", "zstd"
  ],
  "broken_windows": [
    "arduinocore-avr", "cpr", "docopt", "emilk-loguru",
    "google-woff2", "imgui-sfml", "jbigkit",
    "libgpiod", "liblbfgs", "libwebsockets",
    "mocklibc", "mpdecimal", "netstring-c", "openh264",
    "protobuf-c", "quazip", "rdkafka", "termbox","unit-system",
    "zstd"
  ],
  "broken_darwin": [
    "arduinocore-avr", "check", "cpr",
    "docopt", "emilk-loguru", "glib",
    "google-benchmark", "google-woff2", "graphite2",
    "imgui", "imgui-sfml", "libgpiod", "libwebsockets",
    "lz4", "mocklibc", "mpdecimal", "openal-soft",
    "openh264", "protobuf-c", "quazip", "rdkafka",
    "rtaudio", "sdl2_image", "sfml", "tinyply", "tinyxml2", "unit-system",
    "zstd"
  ],

  "abseil-cpp": {
    "build_options": [
    ]
  },
  "box2d": {
    "build_options": [
    ]
  },
  "cli11": {
    "build_options": [
      "cpp_std=c++14"
    ]
  },
  "dragonbox": {
    "build_options": [
    ]
  },
  "epoxy": {
    "debian_packages": [
      "libgl-dev",
      "libegl-dev"
    ],
    "build_on": {
      "windows": false
    }
  },
  "facil": {
    "_comment": "- Requires POSIX platform.",
    "build_on": {
      "windows": false
    }
  },
  "fuse": {
    "_comment": "- relies on Linux and BSD specific APIs",
    "build_on": {
      "darwin": false,
      "windows": false
    }
  },
  "fmt": {
    "build_options": [
    ]
  },
  "ftxui": {
    "build_options": [
    ]
  },
  "gdbm": {
    "_comment": "- Requires POSIX platform.",
    "build_on": {
      "windows": false
    }
  },
  "glib": {
    "_comment": "- Disable unit tests because upstream does not run them on Windows and some are flaky on Linux.",
    "build_options": [
      "glib:tests=false"
    ]
  },
  "hinnant-date": {
    "debian_packages": [
      "libcurl4-gnutls-dev"
    ],
    "_comment": "libcurl is not available with MSVC CI",
    "build_on": {
      "windows": false
    }
  },
  "htslib": {
    "_comment": "- relies on lots of POSIX interfaces",
    "build_on": {
      "windows": false
    },
    "build_options": [
      "htslib:tests=true"
    ]
  },
  "jsoncpp": {
    "build_options": [
    ]
  },
  "icu": {
    "build_options": [
    ]
  },
  "imgui": {
    "debian_packages": [
      "liballegro5-dev",
      "libglfw3-dev",
      "libsdl2-dev",
      "libvulkan-dev"
    ]
  },
  "libccp4c": {
    "_comment": "- upstream does not support building with MSVC",
    "build_on": {
      "windows": false
    }
  },
  "libdrm": {
    "_comment": "- relies on Linux and BSD specific APIs",
    "build_on": {
      "darwin": false,
      "windows": false
    },
    "debian_packages": [
      "libpciaccess-dev"
    ]
  },
  "libebml": {
    "build_options": [
    ]
  },
  "libmatroska": {
    "build_options": [
    ]
  },
  "libnpupnp": {
    "brew_packages": [
      "libmicrohttpd"
    ],
    "debian_packages": [
      "libcurl4-gnutls-dev",
      "libmicrohttpd-dev"
    ],
    "_comment": "libmicrohttpd is not available with MSVC CI",
    "build_on": {
      "windows": false
    },
    "build_options": [
    ]
  },
  "liburing": {
    "_comment": "- relies on Linux-specific APIs",
    "build_on": {
      "darwin": false,
      "windows": false
    }
  },
  "lmdb": {
    "_comment": "Tests and programs disabled by default",
    "build_options": [
      "lmdb:tests=true",
      "lmdb:programs=true"
    ]
  },
  "openssl": {
    "_comment": "- The NodeJS generator requires Linux",
    "build_on": {
      "darwin": false,
      "windows": false
    },
    "debian_packages": [
      "libtext-template-perl",
      "nasm"
    ],
    "build_options": [
      "openssl:build_cli=true"
    ]
  },
  "orcus": {
    "_comment": "- depends on Boost, which is not available on WrapDB",
    "build_on": {
      "windows": false
    },
    "brew_packages": [
      "boost"
    ],
    "debian_packages": [
      "libmdds-dev",
      "libboost-filesystem-dev",
      "libboost-iostreams-dev"
    ],
    "build_options": [
    ]
  },
  "protobuf": {
    "build_options": [
    ]
  },
  "rdkafka": {
    "build_options": [
      "rdkafka:WITH_SASL=disabled",
      "rdkafka:WITH_ZSTD=disabled"
    ]
  },
  "re2": {
    "build_options": [
      "cpp_std=c++14"
    ]
  },
  "rtaudio": {
    "debian_packages": [
      "libpulse-dev",
      "libasound2-dev",
      "libjack-dev"
    ]
  },
  "sdl2": {
    "debian_packages": [
      "libwayland-dev",
      "libx11-dev",
      "libxcursor-dev",
      "libxext-dev",
      "libxi-dev",
      "libxinerama-dev",
      "libxkbcommon-dev",
      "libxkbfile-dev",
      "libxrandr-dev",
      "libxt-dev",
      "libxv-dev",
      "libxxf86vm-dev",
      "pkg-config",
      "wayland-protocols"
    ]
  },
  "sds": {
    "build_on": {
      "windows": false
    },
    "build_options": [
      "sds:tests=true"
    ]
  },
  "sfml": {
    "debian_packages": [
      "libgl-dev",
      "libopenal-dev",
      "libudev-dev",
      "libxrandr-dev"
    ]
  },
  "slirp": {
    "_comment": "- relies on lots of POSIX interfaces",
    "build_on": {
      "windows": false
    }
  },
  "spdlog": {
    "build_options": [
    ]
  },
  "wayland": {
    "_comment": "- relies on Linux-specific APIs",
    "build_on": {
      "darwin": false,
      "windows": false
    },
    "build_options": [
      "wayland:documentation=false"
    ]
  },
  "wayland-protocols": {
    "_comment": "- relies on wayland-scanner which uses Linux-specific APIs",
    "build_on": {
      "darwin": false,
      "windows": false
    },
    "debian_packages": [
      "libwayland-bin",
      "libwayland-dev"
    ]
  }
}
