ports = {
  #'bcc_16bit_dos_flsh186':
  #'bcc_16bit_dos_pc':
  #'ccs_arm_cm3':
  #'ccs_arm_cm4f':
  #'ccs_arm_cr4':
  #'ccs_msp430x':
  #'codewarrior_coldfire_v1':
  #'codewarrior_coldfire_v2':
  #'codewarrior_hcs12':
  #'gcc_arm_ca9':
  #'gcc_arm_aarch64':
  #'gcc_arm_aarch64_sre':
  'gcc_arm_cm0': [
    files(
      'GCC/ARM_CM0/mpu_wrappers_v2_asm.c',
      'GCC/ARM_CM0/port.c',
      'GCC/ARM_CM0/portasm.c',
    ),
    include_directories('GCC/ARM_CM0'),
  ],
  'gcc_arm_cm3': [
    files('GCC/ARM_CM3/port.c'),
    include_directories('GCC/ARM_CM3'),
  ],
  'gcc_arm_cm3_mpu': [
    files('GCC/ARM_CM3_MPU/mpu_wrappers_v2_asm.c', 'GCC/ARM_CM3_MPU/port.c'),
    include_directories('GCC/ARM_CM3_MPU'),
  ],
  'gcc_arm_cm4_mpu': [
    files('GCC/ARM_CM4_MPU/mpu_wrappers_v2_asm.c', 'GCC/ARM_CM4_MPU/port.c'),
    include_directories('GCC/ARM_CM4_MPU'),
  ],
  'gcc_arm_cm4f': [
    files('GCC/ARM_CM4F/port.c'),
    include_directories('GCC/ARM_CM4F'),
  ],
  'gcc_arm_cm7': [
    files('GCC/ARM_CM7/r0p1/port.c'),
    include_directories('GCC/ARM_CM7/r0p1'),
  ],
  #'gcc_arm_cm23_nonsecure':
  #'gcc_arm_cm23_secure':
  #'gcc_arm_cm23_ntz_nonsecure':
  #'gcc_arm_cm33_nonsecure':
  #'gcc_arm_cm33_secure':
  #'gcc_arm_cm33_ntz_nonsecure':
  #'gcc_arm_cm33_tfm':
  #'gcc_arm_cm35p_nonsecure':
  #'gcc_arm_cm35p_secure':
  #'gcc_arm_cm35p_ntz_nonsecure':
  #'gcc_arm_cm55_nonsecure':
  #'gcc_arm_cm55_secure':
  #'gcc_arm_cm55_ntz_nonsecure':
  #'gcc_arm_cm55_tfm':
  #'gcc_arm_cm85_nonsecure':
  #'gcc_arm_cm85_secure':
  #'gcc_arm_cm85_ntz_nonsecure':
  #'gcc_arm_cm85_tfm':
  #'gcc_arm_cr5':
  #'gcc_arm_crx_mpu':
  #'gcc_arm_crx_nogic':
  #'gcc_arm7_at91fr40008':
  #'gcc_arm7_at91sam7s':
  #'gcc_arm7_lpc2000':
  #'gcc_arm7_lpc23xx':
  #'gcc_atmega323':
  #'gcc_avr32_uc3':
  #'gcc_coldfire_v2':
  #'gcc_cortus_aps3':
  #'gcc_h8s2329':
  #'gcc_hcs12':
  #'gcc_ia32_flat':
  #'gcc_microblaze':
  #'gcc_microblaze_v8':
  #'gcc_microblaze_v9':
  #'gcc_msp430f449':
  #'gcc_niosii':
  #'gcc_ppc405_xilinx':
  #'gcc_ppc440_xilinx':
  #'gcc_risc_v':
  #'gcc_risc_v_pulpino_vega_rv32m1rm':
  #'gcc_risc_v_generic':
  #'gcc_rl78':
  #'gcc_rx100':
  #'gcc_rx200':
  #'gcc_rx600':
  #'gcc_rx600_v2':
  #'gcc_rx700_v3_dpfpu':
  #'gcc_str75x':
  #'gcc_tricore_1782':
  #'gcc_arc_em_hs':
  #'gcc_arc_v1':
  #'gcc_atmega':
  'gcc_posix': [
    files(
      'ThirdParty/GCC/Posix/port.c',
      'ThirdParty/GCC/Posix/utils/wait_for_event.c',
    ),
    include_directories('ThirdParty/GCC/Posix', 'ThirdParty/GCC/Posix/utils'),
  ],
  #'gcc_rp2040':
  #'gcc_xtensa_esp32':
  #'gcc_avrdx':
  #'gcc_avr_mega0':
  #'iar_78k0k':
  #'iar_arm_ca5_nogic':
  #'iar_arm_ca9':
  #'iar_arm_cm0':
  #'iar_arm_cm3':
  #'iar_arm_cm4f':
  #'iar_arm_cm4f_mpu':
  #'iar_arm_cm7':
  #'iar_arm_cm23_nonsecure':
  #'iar_arm_cm23_secure':
  #'iar_arm_cm23_ntz_nonsecure':
  #'iar_arm_cm33_nonsecure':
  #'iar_arm_cm33_secure':
  #'iar_arm_cm33_ntz_nonsecure':
  #'iar_arm_cm33_tfm':
  #'iar_arm_cm35p_nonsecure':
  #'iar_arm_cm35p_secure':
  #'iar_arm_cm35p_ntz_nonsecure':
  #'iar_arm_cm55_nonsecure':
  #'iar_arm_cm55_secure':
  #'iar_arm_cm55_ntz_nonsecure':
  #'iar_arm_cm55_tfm':
  #'iar_arm_cm85_nonsecure':
  #'iar_arm_cm85_secure':
  #'iar_arm_cm85_ntz_nonsecure':
  #'iar_arm_cm85_tfm':
  #'iar_arm_crx_nogic':
  #'iar_atmega323':
  #'iar_atmel_sam7s64':
  #'iar_atmel_sam9xe':
  #'iar_avr_avrdx':
  #'iar_avr_mega0':
  #'iar_avr32_uc3':
  #'iar_lpc2000':
  #'iar_msp430':
  #'iar_msp430x':
  #'iar_risc_v':
  #'iar_risc_v_generic':
  #'iar_rl78':
  #'iar_rx100':
  #'iar_rx600':
  #'iar_rx700_v3_dpfpu':
  #'iar_rx_v2':
  #'iar_str71x':
  #'iar_str75x':
  #'iar_str91x':
  #'iar_v850es_fx3':
  #'iar_v850es_hx3':
  #'mikroc_arm_cm4f':
  #'mplab_pic18f':
  #'mplab_pic24':
  #'mplab_pic32mec14xx':
  #'mplab_pic32mx':
  #'mplab_pic32mz':
  #'msvc_mingw':
  #'owatcom_16bit_dos_flsh186':
  #'owatcom_16bit_dos_pc':
  #'paradigm_tern_ee_large':
  #'paradigm_tern_ee_small':
  #'renesas_rx100':
  #'renesas_rx200':
  #'renesas_rx600':
  #'renesas_rx600_v2':
  #'renesas_rx700_v3_dpfpu':
  #'renesas_sh2a_fpu':
  #'rowley_msp430f449':
  #'rvds_arm_ca9':
  #'rvds_arm_cm0':
  #'rvds_arm_cm3':
  #'rvds_arm_cm4_mpu':
  #'rvds_arm_cm4f':
  #'rvds_arm_cm7':
  #'rvds_arm7_lpc21xx':
  #'sdcc_cygnal':
  #'softune_mb91460':
  #'softune_mb96340':
  #'tasking_arm_cm4f':
  'template': [files('template/port.c'), include_directories('template')],
  #'cdk_thead_ck802':
  #'xcc_xtensa':
  #'wizc_pic18':
}

port_opt = get_option('port')
cc = meson.get_compiler('c')
if port_opt == 'auto'
  port_frags = [cc.get_id()]
  if host_machine.system() == 'none'
    port_frags += host_machine.cpu_family()
    if host_machine.cpu() == 'cortex-m0'
      port_frags += 'cm0'
    elif host_machine.cpu() == 'cortex-m7'
      port_frags += 'cm7'
    endif
  elif host_machine.system() == 'linux' or host_machine.system() == 'darwin'
    port_frags += 'posix'
  endif
  port_opt = '_'.join(port_frags)
  assert(
    ports.has_key(port_opt),
    'Cannot autodetect port, please specify "port" option value for your host machine',
  )
endif
port_properties = ports[port_opt]
message('FreeRTOS port: ' + port_opt)
src += port_properties[0]
inc += port_properties[1]
