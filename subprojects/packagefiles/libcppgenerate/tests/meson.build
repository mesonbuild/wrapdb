#
# Class tests
#

# Iterate over list of test data. The list is comprised of:
# [generator name, [files generated by generator,], test name]
foreach test_data : [
  ['generate-class1', ['FooClass.h', 'FooClass.cpp'], 'test1'],
  [
    'generate-namespace-class',
    ['NamespaceClass.h', 'NamespaceClass.cpp'],
    'namespace-class-test',
  ],
  [
    'generate-class-with-method',
    ['ClassWithMethod.h', 'ClassWithMethod.cpp'],
    'class-with-method',
  ],
  [
    'generate-imperative-math',
    ['MathOperations.h', 'MathOperations.cpp'],
    'math-class',
  ],
  [
    'generate-class-with-default-values',
    ['ClassWithDefaultValues.h', 'ClassWithDefaultValues.cpp'],
    'test-default-function-values',
  ],
]
  base_generator_name = test_data[0]
  output_files = test_data[1]
  test_name = test_data[2]

  generator_exe = executable(
    base_generator_name + '-generate',
    base_generator_name + '.cpp',
    dependencies: internal_dep,
  )

  generated_source_files = custom_target(
    command: [
      'chdir_and_exec.py',
      meson.current_build_dir(),
      generator_exe,
    ],
    output: output_files,
  )

  tested_exe = executable(test_name, test_name + '.cpp', generated_source_files)

  test(test_name, tested_exe)
endforeach

#
# Enum tests
#

foreach test_name : [
  'enum_name',
  'enum_with_space',
  'enum_single_value',
  'enum_multiple_value',
  'enum_name_bad_chars',
]
  test_exe = executable(
    'test-' + test_name,
    test_name + '.cpp',
    dependencies: internal_dep,
  )
  test(test_name, test_exe)
endforeach
