# OpenSSL library
libcrypto_sources = [
%%-
foreach $src (@libcrypto_srcs) {
  $OUT .= "  '$src',\n";
}
foreach $src (@generated_srcs) {
  if ($src !~ /\.ld/) {
    $OUT .= "  'generated-config/archs/$arch/$asm/$src',\n";
  }
}
-%%]
libssl_sources = [
%%-
foreach $src (@libssl_srcs) {
  $OUT .= "  '$src',\n";
}
-%%]
openssl_defines = [
%%-
foreach $define (@{$config{defines}}) {
  # We rely on Meson's `b_ndebug` instead
  if ($define ne 'NDEBUG') {
    $OUT .= "  '$define',\n";
  }
}
foreach $define (@lib_cppflags) {
  $OUT .= "  '$define',\n";
}
foreach $define (@{$target{defines}}) {
  $OUT .= "  '$define',\n";
}
foreach $define (@{lib_defines}) {
  $OUT .= "  '$define',\n";
}
foreach $define (@{$config{lib_defines}}) {
  $OUT .= "  '$define',\n";
}
-%%]
openssl_cflags = [
%%-
my %cflags_used;
if (!$is_win) {
  foreach $cflag (@cflags) {
    foreach $single_cflag (split / /, $cflag) {
      # Warning and optimization levels are configured on Meson level now, threads will be handled in the root `meson.build`
      if (
        $single_cflag ne '-Wall' &&
        $single_cflag ne '-O3' &&
        $single_cflag ne '-pthread' &&
        !exists($cflags_used{$single_cflag} )
      ) {
        $OUT .= "  '$single_cflag',\n";
        $cflags_used{$single_cflag} = true;
      }
    }
  }
}
-%%]
openssl_libraries = [
%%-
foreach $ex_lib (split / /, $target{ex_libs}) {
  # Threads will be handled in the root `meson.build`
  if ($ex_lib ne '-pthread') {
    # *nix
    if (substr($ex_lib, 0, 2) eq '-l') {
      $ex_lib = substr($ex_lib, 2);
      $OUT .= "  '$ex_lib',\n";
    }
    # Windows
    if ($ex_lib =~ /\.lib$/) {
      $ex_lib = substr($ex_lib, 0, length($ex_lib) - 4);
      $OUT .= "  '$ex_lib',\n";
    }
  }
}
-%%]
openssl_include_directories = [
  'generated-config/archs/%%-$arch-%%/%%-$asm-%%',
  'generated-config/archs/%%-$arch-%%/%%-$asm-%%/include',
  'generated-config/archs/%%-$arch-%%/%%-$asm-%%/crypto',
  'generated-config/archs/%%-$arch-%%/%%-$asm-%%/providers/common/include',
]

# OpenSSL CLI
openssl_cli_sources = [
%%-
foreach $src (@apps_openssl_srcs) {
  if ($src eq 'apps/progs.c') {
    $OUT .= "  'generated-config/archs/$arch/$asm/$src',\n";
  } else {
    unless ($src eq "apps/openssl.rc") {
      $OUT .= "  '$src',\n";
    }
  }
}
foreach $src (@libapps_srcs) {
  $OUT .= "  '$src',\n";
}
-%%]
