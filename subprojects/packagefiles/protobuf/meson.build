project('protobuf', 'cpp', version: '3.20.0', license: 'protobuf')

cc = meson.get_compiler('cpp')

ttype = cc.get_id() == 'msvc' ? 'static_library' : 'library'

if get_option('default_library') != 'static'
  add_project_arguments('-DPROTOBUF_USE_DLLS', language : 'cpp')
  add_project_arguments('-DLIBPROTOBUF_EXPORTS', language : 'cpp')
  add_project_arguments('-DLIBPROTOC_EXPORTS', language : 'cpp')
endif

flags = cc.get_supported_arguments([
  '-DHAVE_PTHREAD',
  '-Wno-sign-compare',
  '-Wno-unused-parameter',
  '-Wno-ignored-qualifiers',
  '/wd4146',
  '/wd4244',
  '/wd4305',
  '/wd4506',
])
deps = dependency('threads')

libprotobuf_lite_src = [
  'src/google/protobuf/any_lite.cc',
  'src/google/protobuf/arena.cc',
  'src/google/protobuf/arenastring.cc',
  'src/google/protobuf/arenaz_sampler.cc',
  'src/google/protobuf/extension_set.cc',
  'src/google/protobuf/generated_enum_util.cc',
  'src/google/protobuf/generated_message_tctable_lite.cc',
  'src/google/protobuf/generated_message_util.cc',
  'src/google/protobuf/implicit_weak_message.cc',
  'src/google/protobuf/inlined_string_field.cc',
  'src/google/protobuf/io/coded_stream.cc',
  'src/google/protobuf/io/io_win32.cc',
  'src/google/protobuf/io/strtod.cc',
  'src/google/protobuf/io/zero_copy_stream.cc',
  'src/google/protobuf/io/zero_copy_stream_impl.cc',
  'src/google/protobuf/io/zero_copy_stream_impl_lite.cc',
  'src/google/protobuf/map.cc',
  'src/google/protobuf/message_lite.cc',
  'src/google/protobuf/parse_context.cc',
  'src/google/protobuf/repeated_field.cc',
  'src/google/protobuf/repeated_ptr_field.cc',
  'src/google/protobuf/stubs/bytestream.cc',
  'src/google/protobuf/stubs/common.cc',
  'src/google/protobuf/stubs/int128.cc',
  'src/google/protobuf/stubs/status.cc',
  'src/google/protobuf/stubs/statusor.cc',
  'src/google/protobuf/stubs/stringpiece.cc',
  'src/google/protobuf/stubs/stringprintf.cc',
  'src/google/protobuf/stubs/structurally_valid.cc',
  'src/google/protobuf/stubs/strutil.cc',
  'src/google/protobuf/stubs/time.cc',
  'src/google/protobuf/wire_format_lite.cc',
]
libprotobuf_lite = build_target(
  'protobuf-lite',
  libprotobuf_lite_src,
  cpp_args: flags,
  dependencies: deps,
  target_type: ttype,
  include_directories: include_directories('src'),
)
protobuf_lite_dep = declare_dependency(
  link_with: libprotobuf_lite,
  include_directories: include_directories('src'),
)


libprotobuf_src = [
  'src/google/protobuf/any.cc',
  'src/google/protobuf/any.pb.cc',
  'src/google/protobuf/api.pb.cc',
  'src/google/protobuf/compiler/importer.cc',
  'src/google/protobuf/compiler/parser.cc',
  'src/google/protobuf/descriptor.cc',
  'src/google/protobuf/descriptor.pb.cc',
  'src/google/protobuf/descriptor_database.cc',
  'src/google/protobuf/duration.pb.cc',
  'src/google/protobuf/dynamic_message.cc',
  'src/google/protobuf/empty.pb.cc',
  'src/google/protobuf/extension_set_heavy.cc',
  'src/google/protobuf/field_mask.pb.cc',
  'src/google/protobuf/generated_message_bases.cc',
  'src/google/protobuf/generated_message_reflection.cc',
  'src/google/protobuf/generated_message_tctable_full.cc',
  'src/google/protobuf/io/gzip_stream.cc',
  'src/google/protobuf/io/printer.cc',
  'src/google/protobuf/io/tokenizer.cc',
  'src/google/protobuf/map_field.cc',
  'src/google/protobuf/message.cc',
  'src/google/protobuf/reflection_ops.cc',
  'src/google/protobuf/service.cc',
  'src/google/protobuf/source_context.pb.cc',
  'src/google/protobuf/struct.pb.cc',
  'src/google/protobuf/stubs/substitute.cc',
  'src/google/protobuf/text_format.cc',
  'src/google/protobuf/timestamp.pb.cc',
  'src/google/protobuf/type.pb.cc',
  'src/google/protobuf/unknown_field_set.cc',
  'src/google/protobuf/util/delimited_message_util.cc',
  'src/google/protobuf/util/field_comparator.cc',
  'src/google/protobuf/util/field_mask_util.cc',
  'src/google/protobuf/util/internal/datapiece.cc',
  'src/google/protobuf/util/internal/default_value_objectwriter.cc',
  'src/google/protobuf/util/internal/error_listener.cc',
  'src/google/protobuf/util/internal/field_mask_utility.cc',
  'src/google/protobuf/util/internal/json_escaping.cc',
  'src/google/protobuf/util/internal/json_objectwriter.cc',
  'src/google/protobuf/util/internal/json_stream_parser.cc',
  'src/google/protobuf/util/internal/object_writer.cc',
  'src/google/protobuf/util/internal/proto_writer.cc',
  'src/google/protobuf/util/internal/protostream_objectsource.cc',
  'src/google/protobuf/util/internal/protostream_objectwriter.cc',
  'src/google/protobuf/util/internal/type_info.cc',
  'src/google/protobuf/util/internal/type_info_test_helper.cc',
  'src/google/protobuf/util/internal/utility.cc',
  'src/google/protobuf/util/json_util.cc',
  'src/google/protobuf/util/message_differencer.cc',
  'src/google/protobuf/util/time_util.cc',
  'src/google/protobuf/util/type_resolver_util.cc',
  'src/google/protobuf/wire_format.cc',
  'src/google/protobuf/wrappers.pb.cc',
]
libprotobuf = build_target(
  'protobuf',
  libprotobuf_src,
  cpp_args: flags,
  target_type: ttype,
  link_with: libprotobuf_lite,
  include_directories: include_directories('src')
)
protobuf_dep = declare_dependency(
  link_with: [libprotobuf_lite, libprotobuf],
  include_directories: include_directories('src')
)

libprotoc_src = [
  'src/google/protobuf/compiler/code_generator.cc',
  'src/google/protobuf/compiler/command_line_interface.cc',
  'src/google/protobuf/compiler/cpp/cpp_enum.cc',
  'src/google/protobuf/compiler/cpp/cpp_enum_field.cc',
  'src/google/protobuf/compiler/cpp/cpp_extension.cc',
  'src/google/protobuf/compiler/cpp/cpp_field.cc',
  'src/google/protobuf/compiler/cpp/cpp_file.cc',
  'src/google/protobuf/compiler/cpp/cpp_generator.cc',
  'src/google/protobuf/compiler/cpp/cpp_helpers.cc',
  'src/google/protobuf/compiler/cpp/cpp_map_field.cc',
  'src/google/protobuf/compiler/cpp/cpp_message.cc',
  'src/google/protobuf/compiler/cpp/cpp_message_field.cc',
  'src/google/protobuf/compiler/cpp/cpp_padding_optimizer.cc',
  'src/google/protobuf/compiler/cpp/cpp_parse_function_generator.cc',
  'src/google/protobuf/compiler/cpp/cpp_primitive_field.cc',
  'src/google/protobuf/compiler/cpp/cpp_service.cc',
  'src/google/protobuf/compiler/cpp/cpp_string_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_doc_comment.cc',
  'src/google/protobuf/compiler/csharp/csharp_enum.cc',
  'src/google/protobuf/compiler/csharp/csharp_enum_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_field_base.cc',
  'src/google/protobuf/compiler/csharp/csharp_generator.cc',
  'src/google/protobuf/compiler/csharp/csharp_helpers.cc',
  'src/google/protobuf/compiler/csharp/csharp_map_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_message.cc',
  'src/google/protobuf/compiler/csharp/csharp_message_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_primitive_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_reflection_class.cc',
  'src/google/protobuf/compiler/csharp/csharp_repeated_enum_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_repeated_message_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_repeated_primitive_field.cc',
  'src/google/protobuf/compiler/csharp/csharp_source_generator_base.cc',
  'src/google/protobuf/compiler/csharp/csharp_wrapper_field.cc',
  'src/google/protobuf/compiler/java/java_context.cc',
  'src/google/protobuf/compiler/java/java_doc_comment.cc',
  'src/google/protobuf/compiler/java/java_enum.cc',
  'src/google/protobuf/compiler/java/java_enum_field.cc',
  'src/google/protobuf/compiler/java/java_enum_field_lite.cc',
  'src/google/protobuf/compiler/java/java_enum_lite.cc',
  'src/google/protobuf/compiler/java/java_extension.cc',
  'src/google/protobuf/compiler/java/java_extension_lite.cc',
  'src/google/protobuf/compiler/java/java_field.cc',
  'src/google/protobuf/compiler/java/java_file.cc',
  'src/google/protobuf/compiler/java/java_generator.cc',
  'src/google/protobuf/compiler/java/java_generator_factory.cc',
  'src/google/protobuf/compiler/java/java_helpers.cc',
  'src/google/protobuf/compiler/java/java_kotlin_generator.cc',
  'src/google/protobuf/compiler/java/java_map_field.cc',
  'src/google/protobuf/compiler/java/java_map_field_lite.cc',
  'src/google/protobuf/compiler/java/java_message.cc',
  'src/google/protobuf/compiler/java/java_message_builder.cc',
  'src/google/protobuf/compiler/java/java_message_builder_lite.cc',
  'src/google/protobuf/compiler/java/java_message_field.cc',
  'src/google/protobuf/compiler/java/java_message_field_lite.cc',
  'src/google/protobuf/compiler/java/java_message_lite.cc',
  'src/google/protobuf/compiler/java/java_name_resolver.cc',
  'src/google/protobuf/compiler/java/java_primitive_field.cc',
  'src/google/protobuf/compiler/java/java_primitive_field_lite.cc',
  'src/google/protobuf/compiler/java/java_service.cc',
  'src/google/protobuf/compiler/java/java_shared_code_generator.cc',
  'src/google/protobuf/compiler/java/java_string_field.cc',
  'src/google/protobuf/compiler/java/java_string_field_lite.cc',
  'src/google/protobuf/compiler/js/js_generator.cc',
  'src/google/protobuf/compiler/js/well_known_types_embed.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_enum.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_enum_field.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_extension.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_field.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_file.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_generator.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_helpers.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_map_field.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_message.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_message_field.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_oneof.cc',
  'src/google/protobuf/compiler/objectivec/objectivec_primitive_field.cc',
  'src/google/protobuf/compiler/php/php_generator.cc',
  'src/google/protobuf/compiler/plugin.cc',
  'src/google/protobuf/compiler/plugin.pb.cc',
  'src/google/protobuf/compiler/python/python_generator.cc',
  'src/google/protobuf/compiler/python/python_helpers.cc',
  'src/google/protobuf/compiler/python/python_pyi_generator.cc',
  'src/google/protobuf/compiler/ruby/ruby_generator.cc',
  'src/google/protobuf/compiler/subprocess.cc',
  'src/google/protobuf/compiler/zip_writer.cc',
]
libprotoc = static_library(
  'protoc',
  libprotoc_src,
  cpp_args: flags,
  gnu_symbol_visibility : 'hidden',
  link_with: [libprotobuf_lite, libprotobuf],
  include_directories: include_directories('src')
)

subdir('src')
